<?php
/** .-------------------------------------------------------------------
 * |  Github: https://github.com/Tinywan
 * |  Blog: http://www.cnblogs.com/Tinywan
 * |-------------------------------------------------------------------
 * |  Author: Tinywan(ShaoBo Wan)
 * |  DateTime: 2017/8/26 14:42
 * |  Mail: Overcome.wan@Gmail.com
 * '-------------------------------------------------------------------*/

namespace app\frontend\controller;

use app\common\controller\BaseFrontend;
use redis\MsgRedis;
use think\Log;

class WebsocketClient extends BaseFrontend
{
    const SERVER_USER_NAME = "www";
    const SERVER_AUTH = "12312";
    const SERVER_IP = "www.tinywan.com";
    const WS_SERVER_PORT = "8081";
    const SHELL_SCRIPT_PATH = "/home/www/web/go-study-line/shell/auto-install/";

    /**
     * 获取基本信息
     */
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    /**
     *  http://test.thinkphp5-line.com/frontend/websocket_client/index
     * @return string
     */
    public function test()
    {
        halt(config());
    }

    public function index()
    {
        $this->view->engine->layout(false);
        return $this->fetch('index');
    }

    /**
     * http://test.thinkphp5-line.com/frontend/websocket_client/chatroom
     * 在线聊天室
     * @return mixed
     */
    public function chatRoom()
    {
        $this->assign('wsServerIP', self::SERVER_IP);
        $this->assign('wsServerPort', self::WS_SERVER_PORT);
        return $this->fetch();
    }

    public function chatRoomRedis()
    {
        $liveId = "L000112";
        $redis = MsgRedis::increaseTotalViewNum($liveId);
        var_dump($redis);
    }

    public function runShell()
    {
        $servers = '192.168.1.1 192.168.1.2 192.168.1.3 192.168.1.4';
        $pwds = 'www123 www456 www678';
        $shell_script = self::SHELL_SCRIPT_PATH . "init.sh";
        $cmdStr = "{$shell_script} {$servers} {$pwds}";
        Log::error('[' . self::formatDate(time()) . ']:' . "Shell 脚本参数 ： " . $cmdStr);
        exec("{$cmdStr} >> /home/www/web/go-study-line/shell/auto-install/shell.log 2>&1 ", $results, $status);
        if ($status !== 0) {
            return "脚本执行错误";
        }
        return "正在执行中....";
    }

    /**
     * 动态显示安装信息
     * @return string
     */
    public function showInstallInfo()
    {
        $this->assign('wsServerIP', self::SERVER_IP);
        $this->assign('wsServerPort', 63804);
        if (request()->isAjax()) {
            // 接受参数
            $buildLicense = input('post.build-license');
            $pushServer = input('post.push-server');
            $pushServerPwd = input('post.push-server-pwd');
            $node1Server = input('post.node1-server');
            $node1ServerPwd = input('post.node1-server-pwd');
            $node2Server = input('post.node2-server');
            $node2ServerPwd = input('post.node2-server-pwd');
            $proxyServer = input('post.proxy-server');
            $proxyServerPwd = input('post.proxy-server-pwd');
//            // 这里启动php-cli 进程了
//            $servers = "121.41.88.209,115.29.8.55";
//            $pwds = "ss,ss";
//            $shell_script = self::SHELL_SCRIPT_PATH . "cli.php";
//            $cmdStr = "{$shell_script} {$servers} {$pwds}";
//            exec("/usr/local/bin/php {$cmdStr} >/dev/null 2>&1 &", $results, $status);
//            if ($status == 0) {
//                // 启动一个WebSocketd 服务
//                return json(['code' => 200, 'msg' => '系统进程启动成功', 'data' => []]);
//            }
//            return json(['code' => 500, 'msg' => '系统进程未成功启动']);
//            return json(['code' => $buildLicense, 'msg' => '系统进程未成功启动']);
        }
        return $this->fetch();
    }

    public function api()
    {
        //请求参数
        $appId = 13669361192;
        $domainName = 'tinywan.amai8.com';
        $appName = 'live';
        //签名密钥
        $appSecret = 'eb9a365a9d37a1354e13ddd7973d5e02409ef451';
        //拼接字符串，注意这里的字符为首字符大小写，采用驼峰命名
        $str = "AppId" . $appId . "AppName" . $appName . "DomainName" . $domainName . $appSecret;
        //签名串，由签名算法sha1生成
        $sign = strtoupper(sha1($str));
        //请求资源访问路径以及请求参数，参数名必须为大写
        $url = "http://ssconsole.amaitech.com/openapi/createPushFlowAddress?AppId=" . $appId . "&AppName=" . $appName . "&DomainName=" . $domainName . "&Sign=" . $sign;
        //CURL方式请求
        $ch = curl_init() or die (curl_error());
        curl_setopt($ch, CURLOPT_URL, $url);
        curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "GET");
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 360);
        $response = curl_exec($ch);
        curl_close($ch);
        //返回数据为JSON格式，进行转换为数组打印输出
        var_dump(json_decode($response, true));
    }

    public function jquery(){
        return $this->fetch();
    }

    /**
     * 自动安装配置文件
     * @return mixed
     */
    public function autoInstallConf()
    {
        $sign = 'd25341478381063d1c76e81b3a52e0592a7c997f';
        $data = [
            'sign'=>'d25341478381063d1c76e81b3a52e0592a7c997f',
            'osscmd'=>[
                'host'=>'oss-cn-shanghai.aliyuncs.com',
                'access_key'=>'LTAIV09s4vFZyYmd',
                'key_secret'=>'qcIEmOR3X0rZcwymRqPu7WfFJGB1Ww'
            ],
            'redis_config'=>[
                'name'=>'Stephen Dolan',
                'email'=>'mu@netsoc.tcd.ie',
                'data_time'=>'2013-06-22T16:30:59Z'
            ],
            'redis_config'=>[
                'name'=>'Stephen Dolan',
                'email'=>'mu@netsoc.tcd.ie',
                'data_time'=>'2013-06-22T16:30:59Z'
            ],
            'push-config'=>[
                'ip'=>'192.168.10.100',
                'user'=>'www',
                'pwd'=>'www123456'
            ],
            'live-node-proxy-config'=>[
                'ip'=>'192.168.10.100',
                'user'=>'www',
                'pwd'=>'www123456'
            ],
            'live_node_config'=>[
                'node1'=>[
                    'ip'=>'192.168.10.10',
                    'user'=>'www',
                    'pwd'=>'www123456'
                ],
                'node2'=>[
                    'ip'=>'192.168.10.12',
                    'user'=>'www',
                    'pwd'=>'www123456'
                ],
                'node3'=>[
                    'ip'=>'192.168.10.13',
                    'user'=>'www',
                    'pwd'=>'www123456'
                ]
            ],
        ];
        file_put_contents('/home/www/script/auto-install/auto-install-package/'.$sign.'.json',json_encode($data));
        return json($data);
    }
}

